#include "../src/Cards/Hand/CardHand.h"
#include "helpers.h"
#include <cstdio>

bool compareArrays(const card_t *a, const card_t *b, const card_hand_index_t size) {
  for (card_hand_index_t i = 0; i < size; i++) {
    if (a[i] != b[i]) {
      return false;
    }
  }
  return true;
}

int main() {
  TEST_START("card hand shuffling")

  TEST_LOG("Preparing hand\n")
  CardHand hand = CardHand();
  hand.fillHandWithDeck();

  TEST_LOG("Testing shuffle with seed 0\n")
  const card_t expectedSeedZero[] = {0x06, 0x08, 0x2a, 0x05, 0x19, 0x1c, 0x0d, 0x09, 0x27, 0x22, 0x14, 0x3a, 0x2d, 0x38, 0x07, 0x2b, 0x3d, 0x34, 0x12, 0x01,
                                     0x29, 0x04, 0x0a, 0x02, 0x31, 0x3b, 0x11, 0x21, 0x18, 0x1b, 0x33, 0x32, 0x1a, 0x15, 0x0b, 0x3c, 0x03, 0x39, 0x0c, 0x17,
                                     0x13, 0x28, 0x25, 0x16, 0x35, 0x1d, 0x37, 0x24, 0x36, 0x2c, 0x26, 0x23};
  hand.shuffleHand(0);
  hand.printAsArray();
  TEST_ASSERT_TRUE(compareArrays(hand.hand, expectedSeedZero, CARDHAND_MAX_SIZE))
  hand.clearHand();
  hand.fillHandWithDeck();

  TEST_LOG("Testing shuffle with seed 1\n")
  const card_t expectedSeedOne[] = {0x04, 0x12, 0x23, 0x35, 0x15, 0x26, 0x03, 0x0d, 0x31, 0x37, 0x29, 0x32, 0x33, 0x07, 0x3b, 0x06, 0x16, 0x28, 0x22, 0x17,
                                    0x3a, 0x2d, 0x27, 0x02, 0x0b, 0x36, 0x21, 0x0a, 0x24, 0x2b, 0x14, 0x1a, 0x34, 0x25, 0x38, 0x1d, 0x2a, 0x18, 0x1c, 0x0c,
                                    0x1b, 0x05, 0x11, 0x09, 0x3c, 0x13, 0x08, 0x01, 0x39, 0x2c, 0x3d, 0x19};
  hand.shuffleHand(1);
  hand.printAsArray();
  TEST_ASSERT_TRUE(compareArrays(hand.hand, expectedSeedOne, CARDHAND_MAX_SIZE))
  hand.clearHand();
  hand.fillHandWithDeck();

  TEST_LOG("Testing shuffle with seed 123456\n")
  const card_t expectedHighValueSeed[] = {0x2c, 0x1c, 0x02, 0x26, 0x21, 0x24, 0x36, 0x12, 0x28, 0x1b, 0x29, 0x35, 0x32, 0x0c, 0x01, 0x27, 0x04, 0x2a, 0x3d, 0x0d,
                                          0x0a, 0x17, 0x0b, 0x2d, 0x15, 0x34, 0x39, 0x08, 0x3b, 0x1d, 0x19, 0x18, 0x03, 0x23, 0x06, 0x05, 0x09, 0x33, 0x13, 0x1a,
                                          0x25, 0x14, 0x3a, 0x16, 0x31, 0x37, 0x2b, 0x11, 0x38, 0x3c, 0x22, 0x07};
  hand.shuffleHand(123456);
  hand.printAsArray();
  TEST_ASSERT_TRUE(compareArrays(hand.hand, expectedHighValueSeed, CARDHAND_MAX_SIZE))
  hand.clearHand();
  hand.fillHandWithDeck();

  TEST_END()

  return 0;
}
